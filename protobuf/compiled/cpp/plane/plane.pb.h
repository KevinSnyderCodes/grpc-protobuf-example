// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plane/plane.proto

#ifndef PROTOBUF_INCLUDED_plane_2fplane_2eproto
#define PROTOBUF_INCLUDED_plane_2fplane_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_plane_2fplane_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_plane_2fplane_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_plane_2fplane_2eproto();
class Bounds;
class BoundsDefaultTypeInternal;
extern BoundsDefaultTypeInternal _Bounds_default_instance_;
class Coordinates;
class CoordinatesDefaultTypeInternal;
extern CoordinatesDefaultTypeInternal _Coordinates_default_instance_;
class Point;
class PointDefaultTypeInternal;
extern PointDefaultTypeInternal _Point_default_instance_;
namespace google {
namespace protobuf {
template<> ::Bounds* Arena::CreateMaybeMessage<::Bounds>(Arena*);
template<> ::Coordinates* Arena::CreateMaybeMessage<::Coordinates>(Arena*);
template<> ::Point* Arena::CreateMaybeMessage<::Point>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class Coordinates : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Coordinates) */ {
 public:
  Coordinates();
  virtual ~Coordinates();

  Coordinates(const Coordinates& from);

  inline Coordinates& operator=(const Coordinates& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Coordinates(Coordinates&& from) noexcept
    : Coordinates() {
    *this = ::std::move(from);
  }

  inline Coordinates& operator=(Coordinates&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Coordinates& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Coordinates* internal_default_instance() {
    return reinterpret_cast<const Coordinates*>(
               &_Coordinates_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Coordinates* other);
  friend void swap(Coordinates& a, Coordinates& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Coordinates* New() const final {
    return CreateMaybeMessage<Coordinates>(NULL);
  }

  Coordinates* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Coordinates>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Coordinates& from);
  void MergeFrom(const Coordinates& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Coordinates* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int64 x() const;
  void set_x(::google::protobuf::int64 value);

  // int64 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int64 y() const;
  void set_y(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Coordinates)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 x_;
  ::google::protobuf::int64 y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_plane_2fplane_2eproto;
};
// -------------------------------------------------------------------

class Point : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Point) */ {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point(Point&& from) noexcept
    : Point() {
    *this = ::std::move(from);
  }

  inline Point& operator=(Point&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Point& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point* internal_default_instance() {
    return reinterpret_cast<const Point*>(
               &_Point_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Point* other);
  friend void swap(Point& a, Point& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point* New() const final {
    return CreateMaybeMessage<Point>(NULL);
  }

  Point* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Point>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Coordinates coordinates = 1;
  bool has_coordinates() const;
  void clear_coordinates();
  static const int kCoordinatesFieldNumber = 1;
  const ::Coordinates& coordinates() const;
  ::Coordinates* release_coordinates();
  ::Coordinates* mutable_coordinates();
  void set_allocated_coordinates(::Coordinates* coordinates);

  // uint64 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint64 count() const;
  void set_count(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Point)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Coordinates* coordinates_;
  ::google::protobuf::uint64 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_plane_2fplane_2eproto;
};
// -------------------------------------------------------------------

class Bounds : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Bounds) */ {
 public:
  Bounds();
  virtual ~Bounds();

  Bounds(const Bounds& from);

  inline Bounds& operator=(const Bounds& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bounds(Bounds&& from) noexcept
    : Bounds() {
    *this = ::std::move(from);
  }

  inline Bounds& operator=(Bounds&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Bounds& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bounds* internal_default_instance() {
    return reinterpret_cast<const Bounds*>(
               &_Bounds_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Bounds* other);
  friend void swap(Bounds& a, Bounds& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bounds* New() const final {
    return CreateMaybeMessage<Bounds>(NULL);
  }

  Bounds* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bounds>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bounds& from);
  void MergeFrom(const Bounds& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bounds* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Coordinates min = 1;
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 1;
  const ::Coordinates& min() const;
  ::Coordinates* release_min();
  ::Coordinates* mutable_min();
  void set_allocated_min(::Coordinates* min);

  // .Coordinates max = 2;
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 2;
  const ::Coordinates& max() const;
  ::Coordinates* release_max();
  ::Coordinates* mutable_max();
  void set_allocated_max(::Coordinates* max);

  // @@protoc_insertion_point(class_scope:Bounds)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Coordinates* min_;
  ::Coordinates* max_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_plane_2fplane_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Coordinates

// int64 x = 1;
inline void Coordinates::clear_x() {
  x_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Coordinates::x() const {
  // @@protoc_insertion_point(field_get:Coordinates.x)
  return x_;
}
inline void Coordinates::set_x(::google::protobuf::int64 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Coordinates.x)
}

// int64 y = 2;
inline void Coordinates::clear_y() {
  y_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Coordinates::y() const {
  // @@protoc_insertion_point(field_get:Coordinates.y)
  return y_;
}
inline void Coordinates::set_y(::google::protobuf::int64 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Coordinates.y)
}

// -------------------------------------------------------------------

// Point

// .Coordinates coordinates = 1;
inline bool Point::has_coordinates() const {
  return this != internal_default_instance() && coordinates_ != NULL;
}
inline void Point::clear_coordinates() {
  if (GetArenaNoVirtual() == NULL && coordinates_ != NULL) {
    delete coordinates_;
  }
  coordinates_ = NULL;
}
inline const ::Coordinates& Point::coordinates() const {
  const ::Coordinates* p = coordinates_;
  // @@protoc_insertion_point(field_get:Point.coordinates)
  return p != NULL ? *p : *reinterpret_cast<const ::Coordinates*>(
      &::_Coordinates_default_instance_);
}
inline ::Coordinates* Point::release_coordinates() {
  // @@protoc_insertion_point(field_release:Point.coordinates)
  
  ::Coordinates* temp = coordinates_;
  coordinates_ = NULL;
  return temp;
}
inline ::Coordinates* Point::mutable_coordinates() {
  
  if (coordinates_ == NULL) {
    auto* p = CreateMaybeMessage<::Coordinates>(GetArenaNoVirtual());
    coordinates_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Point.coordinates)
  return coordinates_;
}
inline void Point::set_allocated_coordinates(::Coordinates* coordinates) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete coordinates_;
  }
  if (coordinates) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      coordinates = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coordinates, submessage_arena);
    }
    
  } else {
    
  }
  coordinates_ = coordinates;
  // @@protoc_insertion_point(field_set_allocated:Point.coordinates)
}

// uint64 count = 2;
inline void Point::clear_count() {
  count_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Point::count() const {
  // @@protoc_insertion_point(field_get:Point.count)
  return count_;
}
inline void Point::set_count(::google::protobuf::uint64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:Point.count)
}

// -------------------------------------------------------------------

// Bounds

// .Coordinates min = 1;
inline bool Bounds::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline void Bounds::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
inline const ::Coordinates& Bounds::min() const {
  const ::Coordinates* p = min_;
  // @@protoc_insertion_point(field_get:Bounds.min)
  return p != NULL ? *p : *reinterpret_cast<const ::Coordinates*>(
      &::_Coordinates_default_instance_);
}
inline ::Coordinates* Bounds::release_min() {
  // @@protoc_insertion_point(field_release:Bounds.min)
  
  ::Coordinates* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::Coordinates* Bounds::mutable_min() {
  
  if (min_ == NULL) {
    auto* p = CreateMaybeMessage<::Coordinates>(GetArenaNoVirtual());
    min_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Bounds.min)
  return min_;
}
inline void Bounds::set_allocated_min(::Coordinates* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete min_;
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:Bounds.min)
}

// .Coordinates max = 2;
inline bool Bounds::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline void Bounds::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
inline const ::Coordinates& Bounds::max() const {
  const ::Coordinates* p = max_;
  // @@protoc_insertion_point(field_get:Bounds.max)
  return p != NULL ? *p : *reinterpret_cast<const ::Coordinates*>(
      &::_Coordinates_default_instance_);
}
inline ::Coordinates* Bounds::release_max() {
  // @@protoc_insertion_point(field_release:Bounds.max)
  
  ::Coordinates* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::Coordinates* Bounds::mutable_max() {
  
  if (max_ == NULL) {
    auto* p = CreateMaybeMessage<::Coordinates>(GetArenaNoVirtual());
    max_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Bounds.max)
  return max_;
}
inline void Bounds::set_allocated_max(::Coordinates* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete max_;
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:Bounds.max)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_plane_2fplane_2eproto
